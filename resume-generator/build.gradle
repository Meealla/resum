plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'checkstyle'
}
group = 'ru.kata.project'
version = '0.0.1-SNAPSHOT'

checkstyle {
	toolVersion = '10.12.1'
	configFile = file('config/checkstyle/google_checks.xml')
}

tasks.withType(Checkstyle) {
	reports {
		html.required = true
		xml.required = false
		//html.stylesheet = resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.1'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Для валидации данных
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.postgresql:postgresql:42.7.4'
	implementation 'org.hibernate.orm:hibernate-core:6.6.3.Final'
	// https://mvnrepository.com/artifact/com.puppycrawl.tools/checkstyle
	implementation group: 'com.puppycrawl.tools', name: 'checkstyle', version: '10.20.2'
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.4'
	// https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core
	implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '6.6.3.Final'
	testImplementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:3.4.0'
	implementation 'org.projectlombok:lombok:1.18.36'
	compileOnly 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1'
}

tasks.withType(Checkstyle) {
	reports {
		html.required = true
		xml.required = false
	}
}
checkstyle {
	toolVersion '10.20.2'
	configFile file("\\src\\main\\java\\webapp\\resumegenerator\\config\\checkstyle\\checkstyle.xml ")
	toolVersion = '10.20.2'
	configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
	ignoreFailures = true
	maxWarnings = 0
	maxErrors = 0
}
checkstyleMain {
	source ='src/main/java'
}
checkstyleTest {
	source ='src/test/java'
}
tasks.named('test') {
	useJUnitPlatform()
}