
version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  elasticsearch:
    image: elasticsearch:8.17.0
    container_name: elasticsearch-container-1
    ports:
      - '9200:9200'
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false

  mongodb:
    image: mongo:latest
    container_name: mongo-container
    environment:
      MONGO_INITDB_DATABASE: ResumeGenerator
    ports:
      - "27017:27017"  # MongoDB будет доступен на порту 27017
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      retries: 5
      start_period: 10s
      timeout: 10s

  app:
    build: .
    container_name: spring-boot-app
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/ResumeGenerator  # Используем имя контейнера mongodb для подключения
    ports:
      - "8082:8082"  # Приложение будет доступно на порту 8082
    depends_on:
      - mongodb
    networks:
      - app-network


volumes:
  mongo-data:

networks:
  app-network:
    driver: bridge